# /*---------------------------------------------------------------------------8
# |                                                                            |
# |       This workflows deploys the control plane with GitHub Actions         |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

name:                                        Remove Control Plane
run-name:                                    Remove Control Plane by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      control_plane_name:
        description:                         'Control Plane Name, use the following syntax: ENV-LOCA-VNET'
        required:                            true
        type:                                environment
      test:
        description:                         'Only run terraform plan'
        required:                            false
        type:                                boolean
        default:                             false

permissions:
  contents:                                  write
  id-token:                                  write
  issues:                                    write

env:
  TF_IN_AUTOMATION:                          true
  TF_LOG:                                    OFF
  ANSIBLE_CORE_VERSION:                      '2.16'
  TF_VERSION:                                '1.11.3'
  USE_MSI:                                   false

jobs:

  remove-control-plane:
    name:                                    Remove Control Plane
    environment:                             ${{ inputs.control_plane_name }}
    runs-on:                                 self-hosted
    container:
      image:                                 ghcr.io/nnoaman/sap-automation:sdaf-github-actions

    steps:
      - name:                                Checkout the code
        uses:                                actions/checkout@v4
        with:
          fetch-depth:                       0
          token:                             ${{ secrets.GITHUB_TOKEN }}

      - name:                                Configure Git Safe Directory
        run:                                 |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "/__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}"

      - name:                                Get app token
        id:                                  get_workflow_token
        uses:                                peter-murray/workflow-application-token-action@v4
        with:
          application_id:                    ${{ secrets.APPLICATION_ID }}
          application_private_key:           ${{ secrets.APPLICATION_PRIVATE_KEY }}
          #organization:                     ${{ github.repository_owner }}

      - name:                                Azure Login using Managed Identity
        uses:                                Azure/Login@v2
        with:
          auth-type:                         IDENTITY
          client-id:                         ${{ vars.MSI_ID }}
          tenant-id:                         ${{ secrets.AZURE_TENANT_ID }}
          subscription-id:                   ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name:                                Remove Control Plane
        run:                                 |
          echo "Remove control plane deployment"
          cd ${SAP_AUTOMATION_REPO_PATH}
          bash deploy/scripts/pipeline_scripts/v2/12-remove-control-plane.sh
        env:
          APPLICATION_CONFIGURATION_NAME:    ${{ vars.APPLICATION_CONFIGURATION_NAME }}
          APP_REGISTRATION_APP_ID:           ${{ secrets.APP_REGISTRATION_APP_ID }}
          APP_TOKEN:                         ${{ steps.get_workflow_token.outputs.token }}
          ARM_SUBSCRIPTION_ID:               ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          CONTROL_PLANE_NAME:                ${{ inputs.control_plane_name }}
          DEPLOYER_KEYVAULT:                 ${{ vars.DEPLOYER_KEYVAULT }}
          DEPLOYER_TFSTATE_KEY:              "${{ inputs.control_plane_name }}-INFRASTRUCTURE.terraform.tfstate"
          IS_PIPELINE_DEPLOYMENT:            true
          OBJECT_ID:                         ${{ secrets.ARM_OBJECT_ID }}
          TENANT_ID:                         ${{ secrets.ARM_TENANT_ID }}
          TEST_ONLY:                         ${{ inputs.test }}
          TF_VAR_use_spn:                    ${{ env.USE_MSI }}
          USE_MSI:                           ${{ env.USE_MSI }}

  remove-control-plane-finalize:
    name:                                    Finalize Control Plane removal
    environment:                             ${{ inputs.control_plane_name }}
    needs:                                   [remove-control-plane]

    runs-on:                                 ubuntu-latest
    container:
      image:                                 ghcr.io/nnoaman/sap-automation:sdaf-github-actions

    steps:
      - name:                                Checkout the code
        uses:                                actions/checkout@v4
        with:
          fetch-depth:                       0
          token:                             ${{ secrets.GITHUB_TOKEN }}

      - name:                                Configure Git Safe Directory
        run:                                 |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "/__w/${{ github.event.repository.name }}"

      - name:                                Get app token
        id:                                  get_workflow_token
        uses:                                peter-murray/workflow-application-token-action@v4
        with:
          application_id:                    ${{ secrets.APPLICATION_ID }}
          application_private_key:           ${{ secrets.APPLICATION_PRIVATE_KEY }}
          #organization:                     ${{ github.repository_owner }}

      - name:                                Azure Login with Service Principal
        if:                                  ${{ vars.USE_MSI != 'true' }}
        uses:                                Azure/Login@v2
        with:
          creds:                             '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name:                                Prepare Control Plane
        id:                                  prepare_control_plane
        run:                                 |
          echo "Running control plane preparation"
          cd ${SAP_AUTOMATION_REPO_PATH}
          bash deploy/scripts/pipeline_scripts/v2/12-remove-control-plane-finalize.sh
        env:
          APPLICATION_CONFIGURATION_NAME:    ${{ vars.APPLICATION_CONFIGURATION_NAME }}
          ARM_SUBSCRIPTION_ID:               ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:                     ${{ secrets.AZURE_TENANT_ID }}
          ARM_OBJECT_ID:                     ${{ secrets.AZURE_OBJECT_ID }}
          CONTROL_PLANE_NAME:                ${{ inputs.control_plane_name }}
          IS_PIPELINE_DEPLOYMENT:            true
          TEST_ONLY:                         ${{ inputs.test }}
